document.addEventListener("DOMContentLoaded", function() {
    MathJax.typeset();
});

document.addEventListener('DOMContentLoaded', () => {
    const contentMap = {
        next_section_k: `
            <p>A galvanometer contains a magnet, which is a core component of its operation. The interaction between the magnetic field from this magnet and the current flowing through the coil is what makes the galvanometer work.</p>
            <div class="instruction-image-container">
                <img src="/images/image 10.png" alt="structure">
                <p class="instruction-image-label">(Inside structure of the Galvanometer)</p>
            </div>

                <p>
                    When a current \\(I\\) flows through the coil of a galvanometer, it experiences a magnetic force due to the 
                    magnetic field \\(B\\) generated by the magnet within the device. This force creates a torque \\(\\tau\\) that causes 
                    the coil to rotate. The torque is given by:
                </p>
                <div class="centered">
                    \\(\\tau = n \\cdot B \\cdot A \\cdot I\\)
                </div>
                <p>
                    where \\(n\\) is the number of turns in the coil, \\(B\\) is the magnetic field strength, \\(A\\) is the area of the coil, and \\(I\\) is the current.
                </p>

                <p>What causes the coil in a galvanometer to rotate?</p>

                </div>
                    <div class="mc-question">
                        <div class="mc-button-wrapper">
                            <md-outlined-button class="mc-button" data-key="kq1c1">
                                <span class="mc-button-text">A) The voltage applied across the coil.</span>
                            </md-outlined-button>
                        </div>
                        <div class="mc-button-wrapper">
                            <md-outlined-button class="mc-button" data-key="kq1c2">
                                <span class="mc-button-text">B) The magnetic force due to the current flowing through the coil.</span>
                            </md-outlined-button>
                        </div>
                        <div class="mc-button-wrapper">
                            <md-outlined-button class="mc-button" data-key="kq1c3">
                                <span class="mc-button-text">C) The temperature change in the coil.</span>
                            </md-outlined-button>
                        </div>
                        <div class="mc-button-wrapper">
                            <md-outlined-button class="mc-button" data-key="kq1c4">
                                <span>D) I don't know yet.</span>
                            </md-outlined-button>
                        </div>

                        <div class="feedback"></div>

                    </div>
                    <div class="button-container hidden-button">
                        <md-outlined-button class="next-button" data-key="next_section_explanation">Next</md-outlined-button>
                    </div>
                </div>
        `,
        next_section_explanation: `
            <p>The coil rotates until the magnetic torque is balanced by the restoring torque of the spring or torsion wire, given by:</p>
            <div class="centered">
                \\(\\tau \\cdot r = k \\cdot \\theta \\)
            </div>
            <p>where \\(k\\) is the torsion constant of the spring, and \\(\\theta\\) is the angle of deflection. At equilibrium:</p>
            <div class="centered">
                \\( n \\cdot B \\cdot A \\cdot I = k \\cdot \\theta \\)
            </div>
            <p>Solving for the current:</p>
            <div class="centered">
                \\( I = \\frac{k \\cdot \\theta}{n \\cdot B \\cdot A}\\)
            </div>
            <p>Thus, the deflection \\(\\theta\\) is directly proportional to the current \\(I\\), allowing the galvanometer to measure the current flowing through it.</p>
            <div class="button-container">
                <md-outlined-button class="next-button" data-key="next_wp_video">Next</md-outlined-button>
            </div>
        `,
        next_wp_video: `
            <p class="the-coil-rotates">If you want to see an animated explanation of how a galvanometer works, watch this video!</p>
                
            <div class="video-container">
                <iframe class="video" width="560" height="315" src="https://www.youtube.com/embed/eZmkgs97tCo?si=SWbUKASOOMGr-oLq" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
            </div>

            <div class="button-container">
                <md-filled-button class="next-section-button" data-key="next_fd_goal_current">Next Page</md-filled-button>
            </div>
        `

    };
    
    const answerKey = {
        "kq1c1": ["incorrect", " Incorrect. The rotation is due to the magnetic force from the current in the presence of a magnetic field."],
        "kq1c2": ["correct", "Correct. The coil rotates due to the magnetic force created by the current flowing through it, interacting with the magnetic field."],
        "kq1c3": ["incorrect", "Incorrect. The rotation is due to the magnetic force from the current in the presence of a magnetic field."],
        "kq1c4": ["info", " It's okay! The rotation is due to the magnetic force from the current in the presence of a magnetic field."]
    };

    document.body.addEventListener('click', (event) => {
        if (event.target && event.target.classList.contains('next-button')) {
            const button = event.target;
            const key = button.getAttribute('data-key');
            const newContent = contentMap[key];
            const instructionContainer = document.querySelector('.instruction-content');
            
            if (newContent) {
                const textContainer = document.createElement('div');
                textContainer.innerHTML = newContent;
                instructionContainer.appendChild(textContainer);
                button.parentElement.remove();
                textContainer.style.scrollMarginTop = '150px';
                textContainer.scrollIntoView({ behavior: 'smooth' });
                MathJax.typeset();
            }
        }
    });

    document.body.addEventListener('click', (event) => {
        if (event.target && event.target.classList.contains('mc-button')) {
            const button = event.target;
            const choiceID = button.getAttribute('data-key');
            const wrapperDiv = button.parentElement;
            const questionDiv = wrapperDiv.parentElement;

            if (choiceID in answerKey) {
                const [correctFlag, feedbackText] = answerKey[choiceID];
                const feedbackDiv = questionDiv.querySelector('.feedback');
                const nextButton = questionDiv.parentElement.querySelector('.button-container');

                const siblingButtons = questionDiv.querySelectorAll('.mc-button');
                siblingButtons.forEach(sib => {
                    sib.style.setProperty('--_focus-label-text-color', '');
                    sib.style.setProperty('--_outline-color', '');
                    sib.style.backgroundColor = '';
                    const icon = sib.parentElement.querySelector('.status-icon');
                    if (icon) icon.remove();
                });

                let icon;
                if (correctFlag === 'correct') {
                    button.style.setProperty('--_focus-label-text-color', '#319036');
                    button.style.setProperty('--_outline-color', '#319036');
                    button.style.backgroundColor = '#E9FAEA';
                    icon = document.createElement('span');
                    icon.className = 'status-icon check-icon';
                    icon.innerHTML = '<span class="material-symbols-outlined">check</span>';
                } else if (correctFlag === 'incorrect') {
                    button.style.setProperty('--_focus-label-text-color', '#C92525');
                    button.style.setProperty('--_outline-color', '#C92525');
                    button.style.backgroundColor = '#FFEFEF';
                    icon = document.createElement('span');
                    icon.className = 'status-icon x-icon';
                    icon.innerHTML = '<span class="material-symbols-outlined">close</span>';
                } else if (correctFlag === 'info') {
                    button.style.setProperty('--_focus-label-text-color', '#fff');
                    button.style.backgroundColor = '#047db7';
                }

                if (icon) {
                    wrapperDiv.insertBefore(icon, button);
                }
                feedbackDiv.style.display = 'block';
                feedbackDiv.innerHTML = `<b>Feedback:</b> ${feedbackText}`;
                nextButton.classList.remove("hidden-button");
                nextButton.scrollIntoView({ behavior: 'smooth', block: 'end' });

            }
        }
    });
});
